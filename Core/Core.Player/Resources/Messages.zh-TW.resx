<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddressIsNotWithinItsAllowedRangeErrorMessageFormat" xml:space="preserve">
    <value>必修介於 {0}到{1}個字。 你的地址可以輸入字母，數字，或特殊符號。</value>
  </data>
  <data name="DateOfBirthIsIncorrectErrorMessage" xml:space="preserve">
    <value>你的生日格式錯誤。正確格式為DD/MM/YYYY</value>
  </data>
  <data name="DateOfBirthIsLessThan18ErrorMessage" xml:space="preserve">
    <value>您必須年滿18歲或以上</value>
  </data>
  <data name="EmaiHasInvalidFormatErrorMessageFormat" xml:space="preserve">
    <value>你的電子郵件地址必須符合格式 username@domain.com。必須少於{0}個字。</value>
  </data>
  <data name="EmailAlreadyExistsErrorMessage" xml:space="preserve">
    <value>此電子郵件地址已被註冊。請使用另一個地址。</value>
  </data>
  <data name="InvalidCountryCodeErrorMessage" xml:space="preserve">
    <value>無效的國家代碼</value>
  </data>
  <data name="InvalidCurrencyCodesErrorMessage" xml:space="preserve">
    <value>無效的貨幣代碼</value>
  </data>
  <data name="NameIsNotWithinItsAllowedRangeErrorMessageFormat" xml:space="preserve">
    <value>請輸入字母或數字必須介於{0}到{1}字</value>
  </data>
  <data name="PasswordIsNotWithinItsAllowedRangeErrorMessageFormat" xml:space="preserve">
    <value>必須介於{0}到{1}字。你的密碼可以使用字母，數字，或特殊符號。</value>
  </data>
  <data name="PasswordShouldNotBeEmpty" xml:space="preserve">
    <value>密碼為必填</value>
  </data>
  <data name="PhoneIsNotWithinItsAllowedRangeErrorMessageFormat" xml:space="preserve">
    <value>必須為{0}到{1}數字</value>
  </data>
  <data name="PlayerDoesNotExist" xml:space="preserve">
    <value>用戶不存在</value>
  </data>
  <data name="PlayerIsAlreadyLoggedIn" xml:space="preserve">
    <value>用戶已經登錄</value>
  </data>
  <data name="RequiredFieldErrorMessage" xml:space="preserve">
    <value>此欄為必填</value>
  </data>
  <data name="UsernameAlreadyExistsErrorMessage" xml:space="preserve">
    <value>用戶名已被使用。請使用另一個用戶名。</value>
  </data>
  <data name="UserNameIsNotWithinItsAllowedRangeErrorMessageFormat" xml:space="preserve">
    <value>必須介於{0}到{1}字。你的用戶名以使用字母，數字，或特殊符號。</value>
  </data>
  <data name="UsernamePasswordIsNotValid" xml:space="preserve">
    <value>用戶名或密碼不正確</value>
  </data>
  <data name="UsernameShouldNotBeEmpty" xml:space="preserve">
    <value>用戶名為必填</value>
  </data>
  <data name="UsernameHasInvalidFormat" xml:space="preserve">
    <value>Username Has Invalid Format</value>
  </data>
  <data name="UnknownBrand" xml:space="preserve">
    <value>未知的品牌</value>
  </data>
  <data name="ZipCodeIsNotWithinItsAllowedRangeErrorMessageFormat" xml:space="preserve">
    <value>Must be {0}-{1} characters including only letters and numbers</value>
  </data>
  <data name="InvalidPlayerId" xml:space="preserve">
    <value>Invalid Player Id</value>
  </data>
  <data name="PasswordsDoNotMatch" xml:space="preserve">
    <value>Passwords do not match.</value>
  </data>
  <data name="SecurityQuestionAnswerRequired" xml:space="preserve">
    <value>Please enter an answer to the security question.</value>
  </data>
</root>