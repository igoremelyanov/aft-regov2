// Generated by IcedCoffeeScript 108.0.9
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var ViewModel, nav;
    require("controls/grid");
    nav = require("nav");
    return ViewModel = (function(_super) {
      __extends(ViewModel, _super);

      function ViewModel() {
        ViewModel.__super__.constructor.apply(this, arguments);
        this.playerId = ko.observable();
        this.selectedRowId = ko.observable();
      }

      ViewModel.prototype.activate = function(data) {
        return this.playerId('');
      };

      ViewModel.prototype.attached = function(view) {
        var $grid;
        $grid = findGrid(view);
        $("form", view).submit(function() {
          $grid.trigger("reload");
          return false;
        });
        return $grid.on("gridLoad selectionChange", (function(_this) {
          return function(e, row) {
            return _this.selectedRowId(row.id);
          };
        })(this));
      };

      ViewModel.prototype.create = function() {
        return nav.open({
          path: 'fraud/risk-profile-check/edit',
          title: "New Risk Profile Check Configuration",
          data: {
            editMode: true
          }
        });
      };

      ViewModel.prototype.edit = function() {
        return nav.open({
          path: 'fraud/risk-profile-check/edit',
          title: "Edit Risk Profile Check Configuration",
          data: {
            id: this.selectedRowId(),
            editMode: true
          }
        });
      };

      ViewModel.prototype.view = function() {
        return nav.open({
          path: 'fraud/risk-profile-check/edit',
          title: "View Risk Profile Check Configuration",
          data: {
            id: this.selectedRowId(),
            editMode: false
          }
        });
      };

      return ViewModel;

    })(require("vmGrid"));
  });

}).call(this);
