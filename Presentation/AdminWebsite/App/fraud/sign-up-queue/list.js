// Generated by IcedCoffeeScript 108.0.9
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(function(require) {
    var Dialog, ViewModel, config, dateBinders, dateTimePicker, i18n, jgu, nav;
    require("controls/grid");
    nav = require("nav");
    i18n = require("i18next");
    jgu = require("JqGridUtil");
    config = require("config");
    dateTimePicker = require("dateTimePicker");
    dateBinders = require("dateBinders");
    Dialog = require("fraud/sign-up-queue/dialog");
    return ViewModel = (function() {
      function ViewModel() {
        this.update = __bind(this.update, this);
        this.attached = __bind(this.attached, this);
        this.activate = __bind(this.activate, this);
        this.period = ko.observable();
        this.username = ko.observable();
        this.startDate = ko.observable();
        this.endDate = ko.observable();
        this.remarks = ko.observable();
        this.tag = ko.observableArray();
        this.checked = ko.observable(false);
        this.fraudTypes = ko.observableArray();
        this.getFilter = (function(_this) {
          return function() {
            var filter;
            filter = {
              username: _this.username(),
              startDate: _this.startDate(),
              endDate: _this.endDate(),
              tags: _this.tag(),
              period: _this.period()
            };
            return ko.toJSON(filter);
          };
        })(this);
      }

      ViewModel.prototype.playerInfo = function(data, event) {
        var id;
        id = event.target.id;
        return nav.open({
          path: "player-manager/info",
          title: i18n.t("app:playerManager.list.playerInfo"),
          data: {
            playerId: id
          }
        });
      };

      ViewModel.prototype.close = function() {
        return nav.close();
      };

      ViewModel.prototype.onChange = function(data, event) {
        return console.log(data);
      };

      ViewModel.prototype.activate = function(data) {
        var deferred;
        deferred = $.Deferred();
        return $.ajax("signup/fraudtypes?", {
          success: (function(_this) {
            return function(response) {
              _this.fraudTypes(response);
              return deferred.resolve();
            };
          })(this)
        });
      };

      ViewModel.prototype.attached = function(view) {
        return this.grid = findGrid(view);
      };

      ViewModel.prototype.update = function() {
        var data, self;
        self = this;
        data = {
          data: []
        };
        $($("input[type=checkbox]:checked", this.grid).get().reverse()).each(function() {
          var id, tr, val;
          tr = $(this).parents("tr");
          id = $("td:first", tr).text();
          val = $("select", tr).first().val();
          data.data.push({
            playerId: id,
            fraudTypeId: val
          });
          return data.remarks = self.remarks();
        });
        return (new Dialog(data)).show(function() {
          self.remarks("");
          return $(self.grid).trigger("reload");
        });
      };

      return ViewModel;

    })();
  });

}).call(this);
