// Generated by IcedCoffeeScript 108.0.9
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var AddBankModel, baseModel, common, config, i18n, regex;
    i18n = require("i18next");
    config = require("config");
    common = require("payments/banks/common");
    regex = require("regular-expression");
    baseModel = require("base/base-model");
    return AddBankModel = (function(_super) {
      __extends(AddBankModel, _super);

      function AddBankModel(bank) {
        AddBankModel.__super__.constructor.apply(this, arguments);
        this.id = this.makeField(bank.id);
        this.licenseeId = this.makeField().extend({
          required: true
        });
        this.brandId = this.makeField().extend({
          required: true
        });
        this.bankId = this.makeField(bank.bankId);
        this.bankName = this.makeField(bank.bankName).extend({
          required: true,
          maxLength: common.bankNameMaxLength,
          pattern: {
            message: i18n.t("banks.validation.AlphanumericDashUnderscoreSpace"),
            params: regex.alphaNumericDashUnderscoreSpace
          }
        });
        this.countryCode = this.makeField().extend({
          required: true
        });
        this.remarks = this.makeField(bank.remarks).extend({
          required: true,
          maxLength: common.remarksMaxLength
        });
        this.licensees = this.makeSelect();
        this.brands = this.makeSelect();
        this.countries = this.makeSelect();
        $.ajax("/Licensee/Licensees?useFilter=false").done((function(_this) {
          return function(response) {
            _this.licensees(response.licensees);
            _this.licenseeId(bank.licenseeId);
            return $.ajax({
              url: config.adminApi("Brand/Brands?useFilter=false&licensees=" + bank.licenseeId),
              context: _this
            }).done(function(response) {
              _this.brands(response.brands);
              _this.brandId(bank.brandId);
              return $.ajax({
                url: config.adminApi("Brand/GetCountries?brandId=" + bank.brandId),
                context: _this
              }).done(function(response) {
                this.countries(response.countries);
                this.countryCode(bank.countryCode);
                this.licenseeId.subscribe((function(_this) {
                  return function(licenseeId) {
                    _this.licenseeId(licenseeId);
                    return $.ajax({
                      url: config.adminApi("Brand/Brands?useFilter=false&licensees=" + licenseeId),
                      context: _this
                    }).done(function(response) {
                      return this.brands(response.brands);
                    });
                  };
                })(this));
                return this.brandId.subscribe((function(_this) {
                  return function(brandId) {
                    _this.brandId(brandId);
                    return $.ajax({
                      url: config.adminApi("Brand/GetCountries?brandId=" + brandId),
                      context: _this
                    }).done(function(response) {
                      return this.countries(response.countries);
                    });
                  };
                })(this));
              });
            });
          };
        })(this));
      }

      AddBankModel.prototype.mapto = function() {
        var ignoreFields;
        ignoreFields = ["licensees", "licenseeId", "brands", "countries", "bankId"];
        return AddBankModel.__super__.mapto.call(this, ignoreFields);
      };

      return AddBankModel;

    })(baseModel);
  });

}).call(this);
