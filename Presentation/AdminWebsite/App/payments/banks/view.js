// Generated by IcedCoffeeScript 108.0.9
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var ViewModel, baseViewModel, i18n, viewBankModel;
    i18n = require("i18next");
    baseViewModel = require("base/base-view-model");
    viewBankModel = require("payments/banks/models/view-bank-model");
    return ViewModel = (function(_super) {
      __extends(ViewModel, _super);

      function ViewModel() {
        this.activate = __bind(this.activate, this);
        ViewModel.__super__.constructor.apply(this, arguments);
      }

      ViewModel.prototype.activate = function(data) {
        ViewModel.__super__.activate.apply(this, arguments);
        return $.get("/Banks/View?id=" + data.id).done((function(_this) {
          return function(response) {
            _this.Model = new viewBankModel();
            _this.Model.licenseeName(response.data.licenseeName);
            _this.Model.brandName(response.data.brandName);
            _this.Model.bankId(response.data.bankId);
            _this.Model.name(response.data.bankName);
            _this.Model.country(response.data.countryName);
            _this.Model.remarks(response.data.remarks);
            if (data.message) {
              return _this.Model.message(data.message);
            }
          };
        })(this));
      };

      return ViewModel;

    })(baseViewModel);
  });

}).call(this);
