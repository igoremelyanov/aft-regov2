// Generated by IcedCoffeeScript 108.0.9
(function() {
  define(function(require) {
    var DocumentContainer, PlayerInfoViewModel, config, nav, security;
    DocumentContainer = require("layout/document-container/document-container");
    nav = require("nav");
    config = require("config");
    security = require("security/security");
    return PlayerInfoViewModel = (function() {
      function PlayerInfoViewModel() {
        var _ref;
        _ref = ko.observables(), this.playerId = _ref[0], this.fullName = _ref[1], this.username = _ref[2], this.activated = _ref[3];
        this.isOnline = ko.observable(false);
        this.statusClass = ko.computed((function(_this) {
          return function() {
            if (_this.isOnline()) {
              return "green";
            } else {
              return "red";
            }
          };
        })(this));
        this.statusLabel = ko.computed((function(_this) {
          return function() {
            if (_this.isOnline()) {
              return "Online";
            } else {
              return "Offline";
            }
          };
        })(this));
        this.getStatusFlag = false;
        this.updateStatusInterval = setInterval((function(_this) {
          return function() {
            var item;
            if (_this.getStatusFlag) {
              return;
            }
            item = nav.mainContainer.activeItem();
            if (_this.playerId() && item.signature.title() === "Player Manager") {
              _this.getStatusFlag = true;
              return $.get(config.adminApi("PlayerInfo/GetStatus"), {
                playerId: _this.playerId()
              }).success(function(response) {
                return _this.isOnline(response);
              }).always(function() {
                return _this.getStatusFlag = false;
              });
            }
          };
        })(this), 5000);
        this.container = new DocumentContainer();
      }

      PlayerInfoViewModel.prototype.activate = function(data) {
        var addContainerItem;
        this.playerId(data.playerId);
        addContainerItem = (function(_this) {
          return function(path, title) {
            return _this.container.addItem({
              title: title,
              path: path,
              lazy: true,
              data: {
                playerId: _this.playerId()
              }
            });
          };
        })(this);
        addContainerItem("player-manager/info/account", "Account Information");
        addContainerItem("player-manager/info/balance", "Balance Information");
        addContainerItem("player-manager/info/restrictions", "Account Restrictions");
        addContainerItem("player-manager/info/activity-log", "Activity Log");
        addContainerItem("player-manager/info/bank-accounts", "Bank Accounts");
        addContainerItem("player-manager/info/deposits", "Deposit History");
        addContainerItem("player-manager/info/withdrawals", "Withdraw History");
        addContainerItem("player-manager/info/transactions", "Transactions");
        addContainerItem("player-manager/info/transactions-adv", "Advanced Transactions");
        addContainerItem("player-manager/info/fraud-evaluation", "Fraud Evaluation");
        addContainerItem("player-manager/info/identity-verification", "Identity Verification");
        addContainerItem("player-manager/info/bonus/issue", "Issue bonus");
        addContainerItem("player-manager/info/bonus/history", "Bonus history");
        if (security.isOperationAllowed(security.permissions.view, security.categories.responsibleGambling)) {
          addContainerItem("player-manager/info/responsible-gambling", "Responsible gambling");
        }
        return $.ajax(config.adminApi("PlayerInfo/GetPlayerTitle?id=" + (this.playerId()))).done((function(_this) {
          return function(player) {
            console.log(player);
            _this.fullName(player.firstName + " " + player.lastName);
            _this.username(player.username);
            return _this.isOnline(player.isOnline);
          };
        })(this));
      };

      return PlayerInfoViewModel;

    })();
  });

}).call(this);
