// Generated by IcedCoffeeScript 108.0.9
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(function(reguire) {
    var ConfirmDialog, dialog;
    dialog = require("plugins/dialog");
    return ConfirmDialog = (function() {
      function ConfirmDialog(onConfirmAction, text, onConfirmText, onFailedAction) {
        this.yesAction = __bind(this.yesAction, this);
        this.onConfirmAction = onConfirmAction;
        this.onFailedAction = onFailedAction;
        this.question = ko.observable(text);
        this.onConfirmText = ko.observable(onConfirmText);
        this.submitted = ko.observable(false);
        this.message = ko.observable();
        this.messageClass = ko.observable();
      }

      ConfirmDialog.prototype.showError = function(msg) {
        this.message(msg);
        return this.messageClass('alert alert-danger');
      };

      ConfirmDialog.prototype.showMessage = function(msg) {
        this.message(msg);
        return this.messageClass('alert alert-success');
      };

      ConfirmDialog.prototype.show = function() {
        return dialog.show(this);
      };

      ConfirmDialog.prototype.noAction = function() {
        return dialog.close(this);
      };

      ConfirmDialog.prototype.yesAction = function() {
        var failFunc, successFunc;
        successFunc = (function(_this) {
          return function() {
            _this.submitted(true);
            return _this.showMessage(_this.onConfirmText());
          };
        })(this);
        failFunc = (function(_this) {
          return function(msg) {
            _this.submitted(true);
            return _this.showError(msg);
          };
        })(this);
        return this.onConfirmAction(successFunc, failFunc);
      };

      return ConfirmDialog;

    })();
  });

}).call(this);
