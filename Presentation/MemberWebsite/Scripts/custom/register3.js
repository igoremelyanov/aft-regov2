// Generated by IcedCoffeeScript 108.0.9
(function() {
  var RegisterStep3, cleanNumber, usaFormatNumber,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  RegisterStep3 = (function() {
    var model;

    function RegisterStep3() {
      this.onErrorHandler = __bind(this.onErrorHandler, this);
      this.validate = __bind(this.validate, this);
      this.createOnlineDepositObject = __bind(this.createOnlineDepositObject, this);
      this.skipBonus = __bind(this.skipBonus, this);
      this.submitRequest = __bind(this.submitRequest, this);
      this.selectBonus = __bind(this.selectBonus, this);
      this.validateBonusCode = __bind(this.validateBonusCode, this);
      this.submitBonus = __bind(this.submitBonus, this);
      this.bonuscode = ko.observable().extend({
        validator: true
      });
      this.selectedBonusId = ko.observable();
      this.depositRequestInProgress = ko.observable(false);
    }

    RegisterStep3.prototype.submitBonus = function() {
      return console.log("submit bonus");
    };

    RegisterStep3.prototype.validateBonusCode = function() {
      this.bonuscode.setError(false);
      return this.validate("/api/ValidateFirstDepositBonus", {
        depositAmount: $("#deposit-amount").text(),
        bonusCode: this.bonuscode()
      }, (function(_this) {
        return function(response) {
          return redirect('/home/registerstep3?bonusCode=' + response.bonus.code);
        };
      })(this));
    };

    RegisterStep3.prototype.selectBonus = function(data, event) {
      var bonusId;
      bonusId = $(event.currentTarget).find('#bonus-id').text();
      if (!$(event.currentTarget).hasClass('disable')) {
        if ($(event.currentTarget).hasClass('selected')) {
          $(event.currentTarget).removeClass('selected');
          return this.selectedBonusId("");
        } else {
          $('#bonusList .col-sm-3').removeClass('selected');
          $(event.currentTarget).addClass('selected');
          return this.selectedBonusId(bonusId);
        }
      }
    };

    RegisterStep3.prototype.submitRequest = function() {
      var onlineDeposit;
      if (this.depositRequestInProgress()) {
        return;
      }
      onlineDeposit = this.createOnlineDepositObject(this.selectedBonusId());
      onlineDeposit.submitOnlineDeposit();
      return this.depositRequestInProgress(true);
    };

    RegisterStep3.prototype.skipBonus = function() {
      var onlineDeposit;
      if (this.depositRequestInProgress()) {
        return;
      }
      onlineDeposit = this.createOnlineDepositObject('');
      onlineDeposit.submitOnlineDeposit();
      return this.depositRequestInProgress(true);
    };

    RegisterStep3.prototype.createOnlineDepositObject = function(bonusId) {
      var onlineDeposit;
      onlineDeposit = new OnlineDepositModel('/home/registerstep4', '/home/registerstep2');
      onlineDeposit.onlineAmount($("#deposit-amount").text());
      return onlineDeposit.onlineDepositBonusId(bonusId);
    };

    RegisterStep3.prototype.validate = function(url, data, onSuccess) {
      return $.postJson(url, data).done((function(_this) {
        return function(response) {
          return onSuccess(response);
        };
      })(this)).fail((function(_this) {
        return function(failResponse) {
          return _this.onErrorHandler(failResponse);
        };
      })(this));
    };

    RegisterStep3.prototype.onErrorHandler = function(failResponse) {
      var error, field, fieldname, response, _i, _len, _ref, _results;
      response = JSON.parse(failResponse.responseText);
      _ref = response.errors;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        error = _ref[_i];
        fieldname = error.fieldName;
        field = this[fieldname.toLowerCase()];
        if (field) {
          _results.push(field.setError(true));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    model = new RegisterStep3();

    ko.applyBindings(model, document.getElementById("register-wrapper"));

    $('#bonusList .col-sm-3').first().click();

    return RegisterStep3;

  })();

  usaFormatNumber = function(n) {
    n = n.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,");
    return n.replace('.00', '');
  };

  cleanNumber = function(n) {
    n = n.replace(',', '').replace('.00', '');
    return Math.floor(n);
  };

  ko.extenders.validator = function(target) {
    target.hasError = ko.observable(false);
    target.messages = ko.observableArray([]);
    target.setError = (function(_this) {
      return function(val) {
        target.hasError(val);
        if (!val) {
          return target.messages([]);
        }
      };
    })(this);
    target.subscribe((function(_this) {
      return function(newVal, oldVal) {
        return target.setError(false);
      };
    })(this));
    return target;
  };

}).call(this);
