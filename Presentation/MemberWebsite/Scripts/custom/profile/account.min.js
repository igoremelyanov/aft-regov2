(function(){var n=function(n,t){return function(){return n.apply(t,arguments)}},t={}.hasOwnProperty,i=function(n,i){function u(){this.constructor=n}for(var r in i)t.call(i,r)&&(n[r]=i[r]);return u.prototype=i.prototype,n.prototype=new u,n.__super__=i.prototype,n};this.AccountProfile=function(t){function r(t){var i;this.id=t;this.resetField=n(this.resetField,this);this.showChangePasswordForm=n(this.showChangePasswordForm,this);this.changePassword=n(this.changePassword,this);r.__super__.constructor.apply(this,arguments);i=this;i.username=ko.observable();i.currentPassword=ko.observable().extend({required:{params:!0,message:$.i18n.t("app:resetPassword.FieldIsRequired")}});i.newPassword=ko.observable().extend({required:{params:!0,message:$.i18n.t("app:resetPassword.FieldIsRequired")},minLength:{params:6,message:$.i18n.t("app:resetPassword.PasswordIsNotWithinItsAllowedRange")},maxLength:{params:12,message:$.i18n.t("app:resetPassword.PasswordIsNotWithinItsAllowedRange")}});i.confirmPassword=ko.observable().extend({required:{params:!0,message:$.i18n.t("app:resetPassword.FieldIsRequired")},validation:{validator:function(){return function(n){return n===i.newPassword()}}(this),message:$.i18n.t("app:resetPassword.PasswordsCombinationIsNotValid")}});i.changePasswordSuccessful=ko.observable(!1);i.changePasswordFormVisible=ko.observable(!1);ko.validation.group(i)}return i(r,t),r.prototype.changePassword=function(){var n;return n=this,n.isValid()?$.post("/api/ChangePassword",{Username:n.username(),OldPassword:n.currentPassword(),NewPassword:n.newPassword()}).success(function(){return n.changePasswordSuccessful(!0),n.changePasswordFormVisible(!1),n.resetField(n.currentPassword),n.resetField(n.newPassword),n.resetField(n.confirmPassword)}).fail(function(t){var u,i,r;return r=JSON.parse(t.responseText),i=r.message==="UsernamePasswordCombinationIsNotValid"?n.currentPassword:n.newPassword,u=$.i18n.t("app:resetPassword."+r.message),i.error=u,i.__valid__(!1)}):n.errors.showAllMessages()},r.prototype.showChangePasswordForm=function(){return this.changePasswordSuccessful(!1),this.changePasswordFormVisible(!0)},r.prototype.resetField=function(n){return n(null),n.__valid__(!0)},r}(FormBase)}).call(this);