// Generated by IcedCoffeeScript 108.0.9
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.GameHistory = (function(_super) {
    __extends(GameHistory, _super);

    function GameHistory(id) {
      this.id = id;
      GameHistory.__super__.constructor.apply(this, arguments);
      this.game = ko.observable('').extend({
        validatable: true
      });
      this.from = ko.observable('');
      this.to = ko.observable('');
      this.hasErrors = ko.observable(false);
      this.submitFilter = function() {
        return $.postJson('/api/GameFilter', {
          game: this.amount,
          from: this.from,
          to: this.to
        }).success((function(_this) {
          return function(response) {
            if (response.hasError) {
              return $.each(response.errors, function(propName) {
                var observable;
                observable = _this[propName];
                observable.error = 'test';
                return observable.__valid__(false);
              });
            } else {
              return popupAlert('', '');
            }
          };
        })(this));
      };
    }

    return GameHistory;

  })(FormBase);

}).call(this);
