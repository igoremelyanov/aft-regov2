// Generated by IcedCoffeeScript 108.0.9
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  ko.validation.init({
    registerExtenders: true
  }, true);

  this.OnlineDepositModel = (function() {
    function OnlineDepositModel(successReturnUrl, failReturnUrl, failCallback) {
      this.checkStatus = __bind(this.checkStatus, this);
      this.startCheckStatus = __bind(this.startCheckStatus, this);
      this.submitOnlineDeposit = __bind(this.submitOnlineDeposit, this);
      this.successReturnUrl = successReturnUrl;
      this.failReturnUrl = failReturnUrl;
      this.orderId = ko.observable();
      this.onlineAmount = ko.observable("");
      this.onlineDepositRequestInProgress = ko.observable(false);
      this.checkOnlineDepositInProgress = ko.observable(false);
      this.onlineDepositSuccess = ko.observable(location.hash === "#onlineDeposit/success");
      this.onlineDepositErrors = ko.observableArray([]);
      this.playerDepositedAmount = ko.observable(0);
      this.bonusAmount = ko.observable(0);
      this.totalDepositedAmount = ko.observable(0);
      this.onlineDepositBonusCode = ko.observable();
      this.onlineDepositBonusId = ko.observable();
    }

    OnlineDepositModel.prototype.submitOnlineDeposit = function() {
      this.onlineDepositSuccess(false);
      this.onlineDepositErrors([]);
      this.onlineDepositRequestInProgress(true);
      return $.postJson('/api/onlineDeposit', {
        Amount: this.onlineAmount(),
        BonusCode: this.onlineDepositBonusCode(),
        BonusId: this.onlineDepositBonusId()
      }).done((function(_this) {
        return function(response) {
          var counter, pageLoadedTimer, popHeight, popWidth, popupTitle, targetUrl, x, y;
          _this.orderId(response.depositRequestResult.redirectParams.orderId);
          popWidth = screen.width / 1.5;
          popHeight = screen.height / 1.5;
          x = screen.width / 2 - popWidth / 2;
          y = screen.height / 2 - popHeight / 2;
          popupTitle = 'OnlineDeposit';
          targetUrl = getLozalizedPath('/Home/OnlineDepositForm');
          _this.popupPayWin = window.open(targetUrl, popupTitle, 'height=' + popHeight + ',width=' + popWidth + ',left=' + x + ',top=' + y + ',location=0');
          counter = 0;
          return pageLoadedTimer = setInterval(function() {
            var popupWin;
            counter++;
            if (_this.popupPayWin.isPopwinReady) {
              clearInterval(pageLoadedTimer);
              popupWin = _this.popupPayWin.document;
              $('#payRedirectForm', popupWin).attr("action", response.depositRequestResult.redirectUrl);
              $('#method', popupWin).val(response.depositRequestResult.redirectParams.method);
              $('#channel', popupWin).val(response.depositRequestResult.redirectParams.channel);
              $('#merchantId', popupWin).val(response.depositRequestResult.redirectParams.merchantId);
              $('#orderId', popupWin).val(response.depositRequestResult.redirectParams.orderId);
              $('#amount', popupWin).val(response.depositRequestResult.redirectParams.amount);
              $('#currency', popupWin).val(response.depositRequestResult.redirectParams.currency);
              $('#language', popupWin).val(response.depositRequestResult.redirectParams.language);
              $('#returnUrl', popupWin).val(response.depositRequestResult.redirectParams.returnUrl);
              $('#notifyUrl', popupWin).val(response.depositRequestResult.redirectParams.notifyUrl);
              $('#signature', popupWin).val(response.depositRequestResult.redirectParams.signature);
              $('#payRedirectForm', popupWin).submit();
              return _this.startCheckStatus();
            } else {
              if (counter >= 20) {
                return clearInterval(pageLoadedTimer);
              }
            }
          }, 300);
        };
      })(this)).fail((function(_this) {
        return function(jqXHR) {
          _this.fail(JSON.parse(jqXHR.responseText));
          return _this.onlineDepositRequestInProgress(false);
        };
      })(this)).always((function(_this) {
        return function() {};
      })(this));
    };

    OnlineDepositModel.prototype.startCheckStatus = function() {
      var pageClosedtimer;
      return pageClosedtimer = setInterval((function(_this) {
        return function() {
          if (_this.popupPayWin.closed) {
            clearInterval(pageClosedtimer);
            return _this.checkStatus();
          }
        };
      })(this), 1000);
    };

    OnlineDepositModel.prototype.fail = function(response) {
      var error, message, _i, _len, _ref;
      message = '';
      if (IsJsonString(response.message)) {
        error = JSON.parse(response.message);
        message = i18n.t(error.text, error.variables);
      } else {
        message = i18n.t(response.message);
      }
      if (response.unexpected || response.message) {
        return this.onlineDepositErrors.push(i18n.t("app:payment.deposit.depositFailed") + message);
      } else {
        _ref = response.errors;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          error = _ref[_i];
          this.onlineDepositErrors.push(error);
        }
        if (response.errors.length === 0 && response.message) {
          return this.onlineDepositErrors.push(i18n.t("app:payment.deposit.depositFailed") + message);
        }
      }
    };

    OnlineDepositModel.prototype.checkStatus = function() {
      if (this.checkOnlineDepositInProgress() === false) {
        this.checkOnlineDepositInProgress(true);
        return $.postJson('/api/checkOnlineDepositStatus', {
          TransactionNumber: this.orderId()
        }).done((function(_this) {
          return function(response) {
            if (response.depositStatus.isPaid) {
              _this.onlineDepositSuccess(true);
              _this.onlineDepositRequestInProgress(false);
              _this.playerDepositedAmount(response.depositStatus.amount);
              _this.bonusAmount(response.depositStatus.bonus);
              _this.totalDepositedAmount(response.depositStatus.totalAmount);
              if (_this.successReturnUrl) {
                return redirect(_this.successReturnUrl);
              } else {
                return location.hash = "#onlineDepositResult";
              }
            } else {
              _this.onlineDepositSuccess(false);
              _this.onlineDepositRequestInProgress(false);
              if (_this.successReturnUrl) {
                return redirect(_this.failReturnUrl);
              } else {
                return location.hash = "#onlineDepositResult";
              }
            }
          };
        })(this)).fail((function(_this) {
          return function(jqXHR) {
            return _this.fail(JSON.parse(jqXHR.responseText));
          };
        })(this)).always((function(_this) {
          return function() {
            return _this.checkOnlineDepositInProgress(false);
          };
        })(this));
      }
    };

    return OnlineDepositModel;

  })();

}).call(this);
