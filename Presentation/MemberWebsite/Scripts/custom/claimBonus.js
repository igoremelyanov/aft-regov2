// Generated by IcedCoffeeScript 108.0.9
(function() {
  var ClaimBonusMemberModel, model,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ClaimBonusMemberModel = (function(_super) {
    __extends(ClaimBonusMemberModel, _super);

    function ClaimBonusMemberModel() {
      this.claim = __bind(this.claim, this);
      this.selectBonus = __bind(this.selectBonus, this);
      ClaimBonusMemberModel.__super__.constructor.apply(this, arguments);
      this.claimedBonus = ko.observable();
    }

    ClaimBonusMemberModel.prototype.selectBonus = function(bonusId) {
      if (this.claimedBonus() !== bonusId) {
        return this.claimedBonus(bonusId);
      } else {
        return this.claimedBonus(void 0);
      }
    };

    ClaimBonusMemberModel.prototype.claim = function() {
      return $.postJson('/api/ClaimBonusReward', {
        RedemptionId: this.claimedBonus()
      }).done((function(_this) {
        return function(response) {
          return redirect("/Home/ClaimBonus");
        };
      })(this));
    };

    return ClaimBonusMemberModel;

  })(FormBase);

  model = new ClaimBonusMemberModel;

  model.errors = ko.validation.group(model);

  ko.applyBindings(model, $("#claim-bonus-page")[0]);

  $("#claim-bonus-page").i18n();

}).call(this);
